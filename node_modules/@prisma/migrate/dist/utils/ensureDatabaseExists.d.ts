import type { DatabaseCredentials } from '@prisma/sdk';
import type execa from 'execa';
export declare type MigrateAction = 'create' | 'apply' | 'unapply' | 'dev' | 'push';
export declare type DbType = 'MySQL' | 'PostgreSQL' | 'SQLite' | 'SQL Server' | 'CockroachDB';
export declare function getDbInfo(schemaPath?: string): Promise<{
    schemaWord: 'database';
    name?: string;
    url?: string;
    dbLocation?: string;
    dbType?: DbType;
    dbName?: string;
    schema?: string;
}>;
export declare function ensureCanConnectToDatabase(schemaPath?: string): Promise<Boolean | Error>;
export declare function ensureDatabaseExists(action: MigrateAction, forceCreate?: boolean, schemaPath?: string): Promise<string | undefined>;
export declare function interactivelyCreateDatabase(connectionString: string, action: MigrateAction, schemaDir: string): Promise<void>;
export declare function askToCreateDb(connectionString: string, action: MigrateAction, schemaDir: string): Promise<execa.ExecaReturnValue | undefined | void>;
export declare function getDbLocation(credentials: DatabaseCredentials): string;
export declare function getDbinfoFromCredentials(credentials: DatabaseCredentials): {
    dbName: string | undefined;
    dbType: DbType;
    schemaWord: 'database';
};
